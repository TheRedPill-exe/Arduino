#include <LedControl.h>

LedControl lc = LedControl(11, 13, 10, 1);

void setup() {
    lc.shutdown(0, true);    // Enciende el módulo
    lc.setIntensity(0, 8);    // Ajusta el brillo (0-15)
    lc.clearDisplay(0);       // Limpia la pantalla inicial    
}

void loop() {

  showSofia();
  delay(1000);
  showHeart();
  delay(5000); // Mantiene el corazón 5 segundos
}
void showSofia() {
    byte T[8] = {B01111100, B00010000, B00010000, B00010000, B00010000, B00010000, B00010000, B00000000};
    byte E[8] = {B00111100, B00100000, B00111000, B00100000, B00100000, B00100000, B00111100, B00000000};
    byte A[8] = {B00111100, B01100110, B01100110, B01111110, B01100110, B01100110, B01100110, B00000000};
    byte M[8] = {B00000000, B00000000, B01000100, B10101010, B10010010, B10000010, B10000010, B00000000};
    byte O[8] = {B00111100, B01000010, B01000010, B01000010, B01000010, B01000010, B00111100, B00000000};
    byte S[8] = {B00111100, B00100000, B00111100, B00000100, B00000100, B00111100, B00000000, B00000000};
    byte I[8] = {B00111000, B00010000, B00010000, B00010000, B00010000, B00010000, B00111000, B00000000};
    byte F[8] = {B00111100, B00100000, B00111000, B00100000, B00100000, B00100000, B00100000, B00000000};
    
    // Mostrar "TE"
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, T[row]);
    }
    delay(1000);
    
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, E[row]);
    }
    delay(1000);

    // Mostrar "AMO"
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, A[row]);
    }
    delay(1000);
    
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, M[row]);
    }
    delay(1000);
    
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, O[row]);
    }
    delay(1000);

    // Mostrar "SOFIA"
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, S[row]);
    }
    delay(1000);
    
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, O[row]);
    }
    delay(1000);
    
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, F[row]);
    }
    delay(1000);
    
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, I[row]);
    }
    delay(1000);
    
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, A[row]);
    }
    delay(1000);
}


// Función para mostrar un corazón
void showHeart() {
    byte heart[8] = {
        0b01100110,
        0b11111111,
        0b11111111,
        0b11111111,
        0b01111110,
        0b00111100,
        0b00011000,
        0b00000000
    };
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, heart[row]);
    }
}

// Función para mostrar caracteres individuales (personalizable)
void displayChar(char c) {
    // Definición de caracteres simples puede ir aquí (o usar una librería externa)
    byte customChar[8] = {
        0b00000000, // Ejemplo de un carácter vacío
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000
    };
    for (int row = 0; row < 8; row++) {
        lc.setRow(0, row, customChar[row]);
    }
}

byte A[8] = {B00000000,B00111100,B01100110,B01100110,B01111110,B01100110,B01100110,B01100110};
byte B[8] = {B01111000,B01001000,B01001000,B01110000,B01001000,B01000100,B01000100,B01111100};
byte C[8] = {B00000000,B00011110,B00100000,B01000000,B01000000,B01000000,B00100000,B00011110};
byte D[8] = {B00000000,B00111000,B00100100,B00100010,B00100010,B00100100,B00111000,B00000000};
byte E[8] = {B00000000,B00111100,B00100000,B00111000,B00100000,B00100000,B00111100,B00000000};
byte F[8] = {B00000000,B00111100,B00100000,B00111000,B00100000,B00100000,B00100000,B00000000};
byte G[8] = {B00000000,B00111110,B00100000,B00100000,B00101110,B00100010,B00111110,B00000000};
byte H[8] = {B00000000,B00100100,B00100100,B00111100,B00100100,B00100100,B00100100,B00000000};
byte I[8] = {B00000000,B00111000,B00010000,B00010000,B00010000,B00010000,B00111000,B00000000};
byte J[8] = {B00000000,B00011100,B00001000,B00001000,B00001000,B00101000,B00111000,B00000000};
byte K[8] = {B00000000,B00100100,B00101000,B00110000,B00101000,B00100100,B00100100,B00000000};
byte L[8] = {B00000000,B00100000,B00100000,B00100000,B00100000,B00100000,B00111100,B00000000};
byte M[8] = {B00000000,B00000000,B01000100,B10101010,B10010010,B10000010,B10000010,B00000000};
byte N[8] = {B00000000,B00100010,B00110010,B00101010,B00100110,B00100010,B00000000,B00000000};
byte O[8] = {B00000000,B00111100,B01000010,B01000010,B01000010,B01000010,B00111100,B00000000};
byte P[8] = {B00000000,B00111000,B00100100,B00100100,B00111000,B00100000,B00100000,B00000000};
byte Q[8] = {B00000000,B00111100,B01000010,B01000010,B01000010,B01000110,B00111110,B00000001};
byte R[8] = {B00000000,B00111000,B00100100,B00100100,B00111000,B00100100,B00100100,B00000000};
byte S[8] = {B00000000,B00111100,B00100000,B00111100,B00000100,B00000100,B00111100,B00000000};
byte T[8] = {B00000000,B01111100,B00010000,B00010000,B00010000,B00010000,B00010000,B00000000};
byte U[8] = {B00000000,B01000010,B01000010,B01000010,B01000010,B00100100,B00011000,B00000000};
byte V[8] = {B00000000,B00100010,B00100010,B00100010,B00010100,B00010100,B00001000,B00000000};
byte W[8] = {B00000000,B10000010,B10010010,B01010100,B01010100,B00101000,B00000000,B00000000};
byte X[8] = {B00000000,B01000010,B00100100,B00011000,B00011000,B00100100,B01000010,B00000000};
byte Y[8] = {B00000000,B01000100,B00101000,B00010000,B00010000,B00010000,B00010000,B00000000};
byte Z[8] = {B00000000,B00111100,B00000100,B00001000,B00010000,B00100000,B00111100,B00000000};
